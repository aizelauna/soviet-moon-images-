<HTML>
<HEAD>
<TITLE>generic letter</TITLE>
</HEAD>

<BODY bgcolor=#000000 text=#FF9966 link=#FF6600 vlink=#FFCC99 alink=#FFCC99><CENTER> <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0> <TR>
<TD ALIGN="left" VALIGN="top" WIDTH=550><BR>
<H3> generic letter (#55)</H3>
(an instance of <A HREF="HTM_000009.htm">generic note</A> made by <A HREF="HTM_000002.htm">The_Mayor</A>)
<BR>
<BR>
&nbsp&nbsp&nbsp&nbsp&nbspSome writing on the letter explains that you should 'read letter', and when you've finished, 'burn letter'.
<BR>
<BR>
<BR>
<BR>
VERB SOURCE CODE:
<BR>
<BR>
burn:
<pre>
result = this:do_burn();
player:tell(result ? this:burn_succeeded_msg() | this:burn_failed_msg());
if (msg = result ? this:oburn_succeeded_msg() | this:oburn_failed_msg())
    player.location:announce(player.name, " ", msg);
endif
.

</pre>
<BR>
burn_succeeded_msg oburn_succeeded_msg burn_failed_msg oburn_failed_msg:
<pre>
return (msg = this.(verb)) ? $string_utils:pronoun_sub(msg) | "";
.

</pre>
<BR>
do_burn:
<pre>
c = callers();
while (c && c[1][3].wizard)
    c = listdelete(c, 1);
endwhile
if (c)
    who = c[1][3];
else
    who = player;
endif
if ((this != $letter) && ($perm_utils:controls(who, this) || this:is_readable_by(who)))
    fork (0)
        $recycler:_recycle(this);
    endfork
    return 1;
else
    return E_PERM;
endif
.

</pre>
<BR>
<BR>
PROPERTY DATA:
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp oburn_succeeded_msg
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp oburn_failed_msg
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp burn_failed_msg
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp burn_succeeded_msg
<BR>
<RB>
<BR>
CHILDREN:
<BR>
<A HREF="HTM_001441.htm">diary</A> <A HREF="HTM_001427.htm">Calling_Card</A> <RB>
</TR>
</TABLE>
</CENTER>
</BODY>
</HTML>
