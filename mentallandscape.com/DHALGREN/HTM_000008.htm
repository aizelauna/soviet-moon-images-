<HTML>
<HEAD>
<TITLE>generic container</TITLE>
</HEAD>

<BODY bgcolor=#000000 text=#FF9966 link=#FF6600 vlink=#FFCC99 alink=#FFCC99><CENTER> <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0> <TR>
<TD ALIGN="left" VALIGN="top" WIDTH=550><BR>
<H3> generic container (#8)</H3>
(an instance of <A HREF="HTM_000005.htm">generic thing</A> made by <A HREF="HTM_000002.htm">The_Mayor</A>)
<BR>
<BR>
<pre>
</pre>
<BR>
<BR>
<BR>
VERB SOURCE CODE:
<BR>
<BR>
p*ut in*sert d*rop:
<pre>
if ((this.location != player) && (this.location != player.location))
    player:tell("You can't get at ", this.name, ".");
elseif (dobj == $nothing)
    player:tell("What do you want to put ", prepstr, " ", this.name, "?");
elseif ($command_utils:object_match_failed(dobj, dobjstr))
elseif ((dobj.location != player) && (dobj.location != player.location))
    player:tell("You don't have ", dobj.name, ".");
elseif (!this.opened)
    player:tell(this.name, " is closed.");
else
    set_task_perms(callers() ? caller_perms() | player);
    dobj:moveto(this);
    if (dobj.location == this)
        player:tell(this:put_msg());
        if (msg = this:oput_msg())
            player.location:announce(player.name, " ", msg);
        endif
    else
        player:tell(this:put_fail_msg());
        if (msg = this:oput_fail_msg())
            player.location:announce(player.name, " ", msg);
        endif
    endif
endif
.

</pre>
<BR>
re*move ta*ke g*et:
<pre>
if (!this.opened)
    player:tell(this.name, " is not open.");
elseif (this.dark)
    player:tell("You can't see into ", this.name, " to remove anything.");
elseif ((dobj = this:match_object(dobjstr)) == $nothing)
    player:tell("What do you want to take from ", this.name, "?");
elseif ($command_utils:object_match_failed(dobj, dobjstr))
elseif (!(dobj in this:contents()))
    player:tell(dobj.name, " isn't in ", this.name, ".");
else
    dobj:moveto(player);
    if (dobj.location == player)
        player:tell(this:remove_msg());
        if (msg = this:oremove_msg())
            player.location:announce(player.name, " ", msg);
        endif
    else
        dobj:moveto(this.location);
        if (dobj.location == this.location)
            player:tell(this:remove_msg());
            if (msg = this:oremove_msg())
                player.location:announce(player.name, " ", msg);
            endif
            player:tell("You can't pick up ", dobj.name, ", so it tumbles onto the 
floor.");
        else
            player:tell(this:remove_fail_msg());
            if (msg = this:oremove_fail_msg())
                player.location:announce(player.name, " ", msg);
            endif
        endif
    endif
endif
.

</pre>
<BR>
look_self:
<pre>
pass();
if (!this.dark)
    this:tell_contents();
endif
.

</pre>
<BR>
acceptable:
<pre>
return !is_player(args[1]);
.

</pre>
<BR>
open:
<pre>
perms = (callers() && (caller != this)) ? caller_perms() | player;
if (this.opened)
    player:tell("It's already open.");
    "elseif (this:is_openable_by(player))";
elseif (this:is_openable_by(perms))
    this:set_opened(1);
    player:tell(this:open_msg());
    if (msg = this:oopen_msg())
        player.location:announce(player.name, " ", msg);
    endif
else
    player:tell(this:open_fail_msg());
    if (msg = this:oopen_fail_msg())
        player.location:announce(player.name, " ", msg);
    endif
endif
.

</pre>
<BR>
@lock_for_open:
<pre>
set_task_perms(player);
key = $lock_utils:parse_keyexp(iobjstr, player);
if (typeof(key) == STR)
    player:tell("That key expression is malformed:");
    player:tell("  ", key);
else
    res = this.open_key = key;
    if (typeof(res) == ERR)
        player:tell(res, ".");
    else
        player:tell("Locked opening of ", this.name, " with this key:");
        player:tell("  ", $lock_utils:unparse_key(key));
    endif
endif
.

</pre>
<BR>
is_openable_by:
<pre>
return (this.open_key == 0) || $lock_utils:eval_key(this.open_key, args[1]);
.

</pre>
<BR>
close:
<pre>
if (!this.opened)
    player:tell("It's already closed.");
else
    this:set_opened(0);
    player:tell(this:close_msg());
    if (msg = this:oclose_msg())
        player.location:announce(player.name, " ", msg);
    endif
endif
.

</pre>
<BR>
@unlock_for_open:
<pre>
set_task_perms(player);
res = dobj.open_key = 0;
if (typeof(res) == ERR)
    player:tell(res, ".");
else
    player:tell("Unlocked ", dobj.name, " for opening.");
endif
.

</pre>
<BR>
tell_contents:
<pre>
if (this.contents)
    player:tell("Contents:");
    for thing in (this.contents)
        player:tell("  ", thing:title());
    endfor
elseif (msg = this:empty_msg())
    player:tell(msg);
endif
.

</pre>
<BR>
set_opened:
<pre>
if (!$perm_utils:controls(caller.owner, this))
    return E_PERM;
else
    this.opened = opened = !(!args[1]);
    this.dark = this.opaque > opened;
    return opened;
endif
.

</pre>
<BR>
@opacity:
<pre>
if (!$perm_utils:controls(player, this))
    player:tell("Can't set opacity of something you don't own.");
elseif ((iobjstr != "0") && (!tonum(iobjstr)))
    player:tell("Opacity must be an integer (0, 1, 2).");
else
    player:tell("Opacity changed:  Now " + {"transparent.", "opaque.", "a black hole."}[1 
+ this:set_opaque(tonum(iobjstr))]);
endif
.

</pre>
<BR>
set_opaque:
<pre>
if (!$perm_utils:controls(caller.owner, this))
    return E_PERM;
elseif (typeof(number = args[1]) != NUM)
    return E_INVARG;
else
    number = (number < 0) ? 0 | ((number > 2) ? 2 | number);
    this.dark = number > this.opened;
    return this.opaque = number;
endif
.

</pre>
<BR>
oclose_msg close_msg oopen_msg open_msg oput_fail_msg put_fail_msg oremove_fail_msg 
oremove_msg remove_fail_msg remove_msg oput_msg put_msg oopen_fail_msg open_fail_msg 
empty_msg:
<pre>
return (msg = this.(verb)) ? $string_utils:pronoun_sub(msg) | "";
.

</pre>
<BR>
<BR>
PROPERTY DATA:
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp oclose_msg
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp close_msg
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp oopen_msg
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp open_msg
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp oput_fail_msg
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp put_fail_msg
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp opaque
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp dark
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp oremove_fail_msg
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp oremove_msg
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp remove_fail_msg
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp remove_msg
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp oput_msg
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp put_msg
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp oopen_fail_msg
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp open_fail_msg
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp empty_msg
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp opened
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp open_key
<BR>
<RB>
<BR>
CHILDREN:
<BR>
<A HREF="HTM_000120.htm">wooden box</A> <A HREF="HTM_000205.htm">shelf of candles</A> <A HREF="HTM_000218.htm">paper bag</A> <A HREF="HTM_000260.htm">smorgasbord</A> <A HREF="HTM_000292.htm">red vinyl backpack</A> <A HREF="HTM_000556.htm">Steamer Trunk</A> <A HREF="HTM_000578.htm">cage</A> <A HREF="HTM_000617.htm">leather knapsack</A> <A HREF="HTM_000712.htm">suitcase</A> <A HREF="HTM_001154.htm">a stage trunk</A> <A HREF="HTM_001202.htm">little yellow bucket</A> <A HREF="HTM_001370.htm">Coffee Machine</A> <A HREF="HTM_001122.htm">peepshow</A> <A HREF="HTM_001353.htm">Basket</A> <A HREF="HTM_001406.htm">a small desk</A> <A HREF="HTM_001428.htm">pint_glass</A> <A HREF="HTM_001439.htm">pint_glass</A> <A HREF="HTM_001979.htm">toybox</A> <A HREF="HTM_002140.htm">an empty pizza box</A> <A HREF="HTM_001265.htm">envelope</A> <A HREF="HTM_000627.htm">a reflective black cabinet</A> <A HREF="HTM_000576.htm">Big Box O' Numbers</A> <A HREF="HTM_002190.htm">cabinet</A> <A HREF="HTM_002386.htm">chamber</A> <A HREF="HTM_002364.htm">Test</A> <A HREF="HTM_002466.htm">a painting</A> <A HREF="HTM_001446.htm">or sense a SOUND</A> <A HREF="HTM_002543.htm">Sack of Potatoes</A> <A HREF="HTM_002416.htm">oread's niche</A> <A HREF="HTM_002614.htm">Birthday Box!</A> <A HREF="HTM_002615.htm">envelope</A> <RB>
</TR>
</TABLE>
</CENTER>
</BODY>
</HTML>
