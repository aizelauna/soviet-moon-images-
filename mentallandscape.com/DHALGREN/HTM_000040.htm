<HTML>
<HEAD>
<TITLE>Everyman</TITLE>
</HEAD>

<BODY bgcolor=#000000 text=#FF9966 link=#FF6600 vlink=#FFCC99 alink=#FFCC99><CENTER> <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0> <TR>
<TD ALIGN="left" VALIGN="top" WIDTH=550><BR>
<H3> Everyman (#40)</H3>
(an instance of <A HREF="HTM_000006.htm">generic player</A> made by <A HREF="HTM_000038.htm">Hacker</A>)
<BR>
<BR>
&nbsp&nbsp&nbsp&nbsp&nbsp... He never even got to go to Disneyland.
<BR>
<BR>
<BR>
Everyman owns<BR>
<BR>
<BR>
VERB SOURCE CODE:
<BR>
<BR>
eval:
<pre>
"eval(code)";
"Evaluate code with $no_one's permissions (so you won't damage anything).";
"If code does not begin with a semicolon, set this = caller (in the code to be evaluated) 
and return the value of the first `line' of code.  This means that subsequent lines 
will not be evaluated at all.";
"If code begins with a semicolon, set this = caller and let the code decide for itself 
when to return a value.  This is how to do multi-line evals.";
set_task_perms(this);
exp = args[1];
if (exp[1] != ";")
    return eval(tostr("this=", caller, "; return ", exp, ";"));
else
    return eval(tostr("this=", caller, ";", exp, ";"));
endif
.

</pre>
<BR>
moveto:
<pre>
return 0;
.

</pre>
<BR>
eval_d:
<pre>
":eval_d(code)";
"exactly like :eval except that the d flag is unset";
"Evaluate code with $no_one's permissions (so you won't damage anything).";
"If code does not begin with a semicolon, set this = caller (in the code to be evaluated) 
and return the value of the first `line' of code.  This means that subsequent lines 
will not be evaluated at all.";
"If code begins with a semicolon, set this = caller and let the code decide for itself 
when to return a value.  This is how to do multi-line evals.";
set_task_perms(this);
exp = args[1];
if (exp[1] != ";")
    return $code_utils:eval_d(tostr("this=", caller, "; return ", exp, ";"));
else
    return $code_utils:eval_d(tostr("this=", caller, ";", exp, ";"));
endif
.

</pre>
<BR>
call_verb:
<pre>
"call_verb(object, verb name, args)";
"Call verb with $no_one's permissions (so you won't damage anything).";
"One could do this with $no_one:eval, but ick.";
set_task_perms(this);
return args[1]:(args[2])(@args[3]);
.

</pre>
<BR>
<BR>
PROPERTY DATA:
<BR>
<RB>
</TR>
</TABLE>
</CENTER>
</BODY>
</HTML>
